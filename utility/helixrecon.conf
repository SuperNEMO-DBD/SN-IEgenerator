# - Configuration
# Authors:
#  - X. Garrido <garrido@lal.in2p3.fr>
#  - F. Mauger <mauger@lpccaen.in2p3.fr>
#  - B. Morgan <ben.morgan@warwick.ac.uk.fr>
#
#

#@description SuperNEMO demonstrator official reconstruction pipeline (version 1.0.0)
#@key_label  "name"
#@meta_label "type"


#####################################################################
# - Module load section
# Falaise_CAT, TrackFit, Falaise_TrackFit and Falaise_ChargedParticleTracking
# need to be loaded.
[name="flreconstruct.plugins" type="flreconstruct::section"]

#@config The list of plugins
plugins : string[4] = "Falaise_CAT"                     \
                      "TrackFit"                        \
                      "Falaise_TrackFit"                \
                      "Falaise_ChargedParticleTracking"

# # Adapt this path to the location of Falaise_ChargedParticleTracking
# Falaise_ChargedParticleTracking.directory : string = "@falaise.plugins:"


#####################################################################
# Must define "pipeline" as this is the module flreconstruct will use
# Define the main chain of modules in the pipeline:
# 1. Mock digitize and mock calibrate
# 2. CAT clusterization of tracker hits
# 3. TrackFit-ting tracker cluster hits
# 4. Reconstruct charged particle tracks
[name="pipeline" type="dpp::chain_module"]

#@config The main pipeline

#@description The list of processing modules chained along the pipeline
modules : string[3] = "CATTrackerClusterizer"  \
                      "TrackFit"               \
                      "ChargedParticleTracker"
#		      "Dump"


###############################################################################
# Here is the second module in the pipeline: the CAT tracker clustering module
# Only main properties have been set : see the
# Falaise/modules/CAT documentation for more details
[name="CATTrackerClusterizer" type="snemo::reconstruction::cat_tracker_clustering_module"]

#@config Parameters for the Cellular Automaton Tracking algorithm (CAT)

##################
# The CAT module #
##################

# #@description Set the logging priority threshold of the module
logging.priority : string = "fatal"

#@description The name of the 'geometry' service
Geo_label  : string  = "geometry"

# #@description The name of the 'calibrated data' bank used as input
# CD_label  : string  = "CD"

# #@description The name of the 'tracker clustering data' bank used as output
# TCD_label  : string  = "TCD"

################################
# The base tracker clusterizer #
################################

# #@description Set the logging priority threshold of the module
# TC.logging.priority : string = "fatal"

# #@description The name of the SuperNEMO geometry locator plugin
# TC.locator_plugin_name : string = "locators_driver"

# #@description The minimum time to consider a Geiger hit as delayed
# TPC.delayed_hit_cluster_time : real = 10 us

#@description Pre-clusterizer processing of prompt hits
TPC.processing_prompt_hits : boolean = 1

#@description Pre-clusterizer processing of delayed hit
TPC.processing_delayed_hits : boolean = 1

#@description Pre-clusterizer processing separately both sides of the tracking chamber
TPC.split_chamber : boolean = 0

##################
# The CAT driver #
##################

# Note: FM 2016-06-01
# We are not sure at all the "CAT.magnetic_field" property has
# an effect on the CAT algorithm.
# Xavier has made some tests using differents values and nothing
# changed in the result (clusters are built in the same way).

#@description Force the CAT algorithm to consider a 25 gauss magnetic field (temporary trick)
#@variant_if    geometry:layout/if_basic/magnetic_field/is_active|false

#@variant_only geometry:layout/if_basic/magnetic_field/is_active/type/is_uniform_vertical|true
#CAT.magnetic_field : real = @variant(geometry:layout/if_basic/magnetic_field/is_active/type/is_uniform_vertical/magnitude|25 gauss)

#@variant_endif geometry:layout/if_basic/magnetic_field/is_active

#@variant_if    geometry:layout/if_basic/magnetic_field/is_inactive|true
CAT.magnetic_field : real = 25 gauss
#@variant_endif geometry:layout/if_basic/magnetic_field/is_inactive

# #@description To be described
# CAT.level                 : string  = "normal"

# #@description To be described
# CAT.max_time              : real    = 5000.0 ms

# #@description To be described
CAT.small_radius          : real    = 0.5 mm

# #@description To be described
# CAT.probmin               : real    = 0.0

# #@description To be described
# CAT.nofflayers            : integer = 1

# #@description To be described
# CAT.first_event           : integer = -1

# #@description To be described
# CAT.ratio                 : real    = 10000.0

# #@description To be described
# CAT.sigma_z_factor        : real = 1.0


####################################################################
# Here is the third in the pipeline: the TrackFit module
# Only main properties have been set : see the
# Falaise/modules/TrackFit documentation for more details
[name="TrackFit" type="snemo::reconstruction::trackfit_tracker_fitting_module"]

#######################
# The TrackFit module #
#######################

# #@description Set the logging priority threshold
# logging.priority : string = "fatal"

#@description The label of the Geometry service
Geo_label : string  = "geometry"

# #@description The label of the input 'Tracker Clustering Data' bank
# TCD_label : string  = "TCD"

# #@description The label of the output 'Tracker Trajectory Data' bank
# TTD_label : string  = "TTD"

###########################
# The base tracker fitter #
###########################

#@description The maximum number of fits to be saved (0 means all will be kept)
maximum_number_of_fits : integer = 0

# #@description Set the name of the Geiger cell locator geometry plugin name
# locator_plugin_name : string = "locators_driver"

#######################
# The TrackFit driver #
#######################

#@description Use drift time (re)calibration (values: "default", "snemo")
drift_time_calibration_label : string = "snemo"

#@description Fit models ("helix", "line" or both)
fitting_models : string[2] = "helix" "line"

############################################
# Parameters to compute the line fit guess #
############################################

#@description 'Line' fit only guess ("BB", "BT", "TB", "TT")
line.only_guess  : string[4] = "BB" "BT" "TB" "TT"

# #@description Set logging priority threshold for line guess driver
# line.guess.logging.priority : string = "fatal"

# #@description Use max radius (cell size) to construct initial guess point (1) or use the effective drift Geiger distance of the hit (0)
# line.guess.use_max_radius    : boolean = 0

# #@description Apply a factor (>0) to the max radius (devel mode)
# line.guess.max_radius_factor : real = 1.0

# #@description Use guess trust (1) or keep all of the guess fits (0) and select later
# line.guess.use_guess_trust   : boolean = 0

# #@description Mode for trusting a fit guess ("counter", "barycenter")
# line.guess.guess_trust_mode  : string = "counter"

#@description Fit the delayed Geiger cluster (by default, false since this mode is devoted to line fit)
line.guess.fit_delayed_clusters : boolean = 1

######################################
# Parameters to perform the line fit #
######################################

# #@description Print the status of the fit stepper at each step (devel only)
# line.fit.step_print_status : boolean = 0

# #@description Plot the 2D view of the fitted data at each step (devel only)
# line.fit.step_draw         : boolean = 0

# #@description Track fit adds start time as an additionnal parameter to the fit (needs a calibration driver)
# line.fit.fit_start_time    : boolean = 0

# #@description Track fit recomputes the drift distance from drift time (needs a calibration driver)
# line.fit.using_drift_time  : boolean = 0

############################################
# Parameters to compute the helix fit guess #
############################################

#@description 'Helix' fit only guess ("BBB", "BBT", "BTB", "BTT", "TBB", "TBT", "TTB", "TTT")
helix.only_guess : string[8] = "BBB" "BBT" "BTB" "BTT" "TBB" "TBT" "TTB" "TTT"

# #@description Set logging priority threshold for line guess driver
# helix.guess.logging.priority : string = "fatal"

# #@description Use max radius (cell size) to construct initial guess point (1) or use the effective drift Geiger distance of the hit (0)
# helix.guess.use_max_radius    : boolean = 0

# #@description Apply a factor (>0) to the max radius (devel mode)
# helix.guess.max_radius_factor : real = 1.0

# #@description Use guess trust (1) or keep all of the guess fits (0) and select later
# helix.guess.use_guess_trust   : boolean = 0

# #@description Mode for trusting a fit guess ("counter", "barycenter")
# helix.guess.guess_trust_mode  : string = "counter"

# #@description Fit the delayed geiger cluster (by default, false since this mode is devoted to line fit)
# helix.guess.fit_delayed_clusters : boolean = 0

#######################################
# Parameters to perform the helix fit #
#######################################

# #@description Print the status of the fit stepper at each step (devel only)
# helix.fit.step_print_status : boolean = 0

# #@description Plot the 2D view of the fitted data at each step (devel only)
# helix.fit.step_draw         : boolean = 0

# #@description Track fit recomputes the drift distance from drift time (needs a calibration driver)
# helix.fit.using_drift_time  : boolean = 0

# #@description Allow a fitted track to begin not tangential to the first hit
# helix.fit.using_first       : boolean = 0

# #@description Allow a fitted track to end not tangential to the last hit
# helix.fit.using_last        : boolean = 0


#################################################################################
# Here is the fourth module in the pipeline: the charged particle tracking module
[name="ChargedParticleTracker" type="snemo::reconstruction::charged_particle_tracking_module"]

#@config Parameters for the Charged Particle Tracking module

# #@description Set the logging priority threshold for the module
# logging.priority : string = "warning"

#@description The label of the Geometry service
Geo_label : string  = "geometry"

# #@description The name of the 'calibrated data' bank used as input
# CD_label  : string  = "CD"

# #@description The name of the 'tracker trajectory data' bank used as input
# TTD_label  : string  = "TTD"

# #@description The name of the 'particle track data' bank used as output
# PTD_label  : string  = "PTD"

#@description List of drivers to be used (see description below)
drivers : string[3] = "VED" "CCD" "CAD"

####################################################################
# Vertex Extrapolation Driver :
# used to find vertices of the tracker trajectory
# either on the source foil or the calorimeter walls

# #@description Vertex Extrapolation Driver logging priority
# VED.logging.priority : string = "warning"

# #@description Use linear extrapolation (not implemented yet)
# VED.use_linear_extrapolation : boolean = 0

####################################################################
# Charge Computation Driver :
# used to determine the track electric charge given
# the particle coming from the source foil

# #@description Charge Computation Driver logging priority
# CCD.logging.priority : string = "warning"

# #@description Charge sign convention
# CCD.charge_from_source : boolean = 1

####################################################################
# Calorimeter Association Driver :
# used to associate particle track to calibrated
# calorimeter hits (given a tolerance)

# #@description Calorimeter Association Driver logging priority
# CAD.logging.priority : string = "warning"

# #@description Maximum matching distance for track/calo association
# CAD.matching_tolerance : real as length = 100 mm

# #@description Use a simpler approach by looking for Geiger cells in front of calo (not implemented yet)
# CAD.use_last_geiger_cell : boolean = 0

#########################################################
# Here is the final module in the pipeline: Dump module
#[name="Dump" type="dpp::dump_module"]

# end
